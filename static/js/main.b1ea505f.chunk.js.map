{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","attachment","setAttachment","nweet","setNweet","createdAt","Date","now","creatorId","uid","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","classNname","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayName","updateProfile","getMyNweets","where","get","console","log","marginTop","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1ea505f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nconst authService = firebase.auth();\r\nexport default authService;\r\n\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import React,{useState} from \"react\";\r\nimport authService from \"fbase\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n\r\n    const [error, setError] =useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        } else if (name===\"password\"){\r\n            setPassword(value)\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            if(newAccount){\r\n                // create account\r\n                await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                )\r\n            } else{\r\n                //log in\r\n                await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                )\r\n            }\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n        \r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit} className = \"container\">\r\n            <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n            <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"CreateAccount\" : \"Sign In\"}/>\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign in\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import authService, { firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub, } from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from '../components/AuthForm';\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async(event) =>{\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name===\"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return(\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n    />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n    </div>\r\n    </div>);\r\n}\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import React, {useState} from \"react\";\r\nimport { storageService, dbService} from \"fbase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPlus, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [nweet, setNweet] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n\r\n        if (attachment !== \"\"){\r\n            return;\r\n        }\r\n        \r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n    };\r\n\r\n    const onChange = (event)=>{\r\n        const { target:{value}} = event;\r\n        setNweet(value);\r\n    };\r\n    \r\n    const onFileChange = (event) => {\r\n        const {\r\n            target : {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment =() => setAttachment((\"\"));\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input \r\n                    className=\"factoryInput__input\"\r\n                    value={nweet} \r\n                    onChange={onChange} \r\n                    type=\"text\" \r\n                    placeholder=\"What's on your mind?\" \r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n                <input\r\n                    id=\"attach-file\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                    style={{\r\n                    opacity: 0,\r\n                    }}\r\n                />\r\n\r\n            {attachment && (\r\n            <div className=\"factoryForm_attachment\">\r\n                <img \r\n                    src={attachment}\r\n                    style = {{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                />\r\n                <div classNname=\"factoryFrom__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes}/>\r\n                </div>\r\n            </div>)}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import { dbService, storageService } from \"fbase\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport {useState} from \"react\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"../components/NweetFactory\"\r\n\r\nconst Home = ({userObj}) => {\r\n    \r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n\r\n    useEffect( () => {\r\n        dbService.collection(\"nweets\").orderBy(\"createdAt\", \"desc\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc =>({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n    \r\n    \r\n\r\n    return(\r\n    <div>\r\n        <NweetFactory userObj={userObj}/>\r\n        <div>\r\n            {nweets.map(nweet => \r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n            )}\r\n        </div>\r\n    </div>\r\n    );\r\n    \r\n}\r\nexport default Home;","import React, {useEffect, useState} from \"react\";\r\nimport authService, {dbService } from \"fbase\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\r\n    const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n        .collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\")\r\n        .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n    getMyNweets();\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                autoFocus\r\n                placeholder=\"Display name\"\r\n                value={newDisplayName}\r\n                className=\"formInput\"\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }}\r\n            />\r\n        </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"../components/Navigation\";\r\n\r\nconst AppRouter =  ({isLoggedIn, userObj, refreshUser}) => {\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\"\r\n                        }}\r\n                        >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\"/>\r\n                    </div>\r\n                    ) : (\r\n                    <>\r\n                    <Route exact path=\"/\"> \r\n                        <Auth/> \r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\"/>\r\n                    </>\r\n                    )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport authService  from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  \n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n    return (\n    <>\n      {init ? <AppRouter\n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj} \n        /> \n        : \"Initializing...\"}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}